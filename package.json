{
    "name": "c-cpp-linter",
    "version": "1.0.0",
    "publisher": "crugthew",
    "repository": {
        "type": "git",
        "url": "http://github.com/crugthew/vscode-c-cpp-linter"
    },
    "homepage": "http://github.com/crugthew/vscode-c-cpp-linter/blob/master/README.md",
    "engines": {
        "vscode": "^1.74.0"
    },
    "license": "SEE LICENSE IN LICENSE.md",
    "displayName": "C/C++ Linter",
    "description": "C/C++ linter using various command-line tools.",
    "categories": [
        "Linters"
    ],
    "keywords": [
        "c",
        "c++",
        "linter",
        "clang",
        "clang-tidy"
    ],
    "preview": false,
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "c-cpp-linter.run",
                "title": "C/C++ Linter: Run"
            },
            {
                "command": "c-cpp-linter.clearFile",
                "title": "C/C++ Linter: Clear Diagnostics For File"
            },
            {
                "command": "c-cpp-linter.clearAll",
                "title": "C/C++ Linter: Clear All Diagnostics"
            }
        ],
        "keybindings": [
            {
                "command": "c-cpp-linter.run",
                "key": "ctrl+l ctrl+f"
            },
            {
                "command": "c-cpp-linter.clearFile",
                "key": "ctrl+l ctrl+c"
            },
            {
                "command": "c-cpp-linter.clearAll",
                "key": "ctrl+l ctrl+shift+c"
            }
        ],
        "configuration": {
            "title": "c-cpp-linter",
            "properties": {
                "c-cpp-linter.compilerEnabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Compiler running is enabled."
                },
                "c-cpp-linter.compilerPath": {
                    "type": "string",
                    "default": "/usr/bin/clang",
                    "description": "The compiler to use. This replaces the compiler used in 'compile_commands.json'."
                },
                "c-cpp-linter.compilationStageFlag": {
                    "type": "string",
                    "default": "-fsyntax-only",
                    "description": "Can be used to only run the compilation stage and not full assembly. This replaces the '-c' flag."
                },
                "c-cpp-linter.additionalCompilationFlags": {
                    "type": "array",
                    "default": [
                        "-Wno-unknown-warning-option"
                    ],
                    "description": "Can be used to add additional flags for the compilation."
                },
                "c-cpp-linter.compilerParserExpression": {
                    "type": "string",
                    "default": "(.*):(\\d+):(\\d+): (error|warning): (.*)",
                    "description": "The regular expression used to parse output."
                },
                "c-cpp-linter.compilerDiagnosticKeywords": {
                    "type": "array",
                    "default": [
                        [
                            "error"
                        ],
                        [
                            "warning"
                        ],
                        []
                    ],
                    "description": "Keywords for outputs that should be treated as errors, warnings, information."
                },
                "c-cpp-linter.clangTidyEnabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "'clang-tidy' running is enabled."
                },
                "c-cpp-linter.clangTidyPath": {
                    "type": "string",
                    "default": "/usr/bin/clang-tidy",
                    "description": "'clang-tidy' path."
                },
                "c-cpp-linter.clangTidyChecksPath": {
                    "type": "string",
                    "default": "${workspaceFolder}/.vscode/.clang-tidy.json",
                    "description": "Path to the 'clang-tidy' configuration file."
                },
                "c-cpp-linter.clangTidyParserExpression": {
                    "type": "string",
                    "default": "(.*):(\\d+):(\\d+): (error|warning): (.*)",
                    "description": "The regular expression used to parse output."
                },
                "c-cpp-linter.clangTidyDiagnosticKeywords": {
                    "type": "array",
                    "default": [
                        [
                            "error"
                        ],
                        [
                            "warning"
                        ],
                        []
                    ],
                    "description": "Keywords for outputs that should be treated as errors, warnings, information."
                },
                "c-cpp-linter.cppCheckEnabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Running 'cppcheck' enabled."
                },
                "c-cpp-linter.cppCheckPath": {
                    "type": "string",
                    "default": "/usr/bin/cppcheck",
                    "description": "'cppcheck' path."
                },
                "c-cpp-linter.additionalCppCheckFlags": {
                    "type": "array",
                    "default": [
                        "--std=c++17",
                        "--platform=unix64"
                    ],
                    "description": "Additional flags for 'cppcheck'."
                },
                "c-cpp-linter.cppCheckChecks": {
                    "type": "array",
                    "default": [
                        "warning",
                        "style",
                        "performance",
                        "portability",
                        "information"
                    ],
                    "description": "Checks to use with 'cppcheck'."
                },
                "c-cpp-linter.cppCheckParserExpression": {
                    "type": "string",
                    "default": "(.*):(\\d+):(\\d+): (error|warning|style|performance|portability|information): (.*)",
                    "description": "The regular expression used to parse output."
                },
                "c-cpp-linter.cppCheckDiagnosticKeywords": {
                    "type": "array",
                    "default": [
                        [
                            "error"
                        ],
                        [
                            "warning",
                            "style",
                            "performance",
                            "portability"
                        ],
                        [
                            "information"
                        ]
                    ],
                    "description": "Keywords for outputs that should be treated as errors, warnings, information."
                },
                "c-cpp-linter.buildFolderPath": {
                    "type": "string",
                    "default": "${workspaceFolder}/build",
                    "description": "Path to the folder where 'compile_commands.json' exists."
                },
                "c-cpp-linter.showInformationDialog": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show the information dialog."
                },
                "c-cpp-linter.showOutputFromLinters": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show all output from linters."
                },
                "c-cpp-linter.maximumParallelFilesChecked": {
                    "type": "number",
                    "default": 4,
                    "description": "Maximum number of files checked in parallel. Others will be added onto a queue."
                },
                "c-cpp-linter.sourceFileExtensions": {
                    "type": "array",
                    "default": [
                        "c",
                        "cpp"
                    ],
                    "description": "Source file extensions."
                },
                "c-cpp-linter.ignoredPaths": {
                    "type": "array",
                    "default": [],
                    "description": "Ignored paths list. (regex)"
                },
                "c-cpp-linter.runOnOpen": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run on open."
                },
                "c-cpp-linter.runOnSave": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run on save."
                }
            }
        }
    },
    "activationEvents": [
        "onLanguage:cpp",
        "onLanguage:c",
        "onCommand:c-cpp-linter.run"
    ],
    "devDependencies": {
        "@types/vscode": "^1.74.0",
        "@types/glob": "^8.0.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@typescript-eslint/eslint-plugin": "^5.45.0",
        "@typescript-eslint/parser": "^5.45.0",
        "eslint": "^8.28.0",
        "glob": "^8.0.3",
        "mocha": "^10.1.0",
        "typescript": "^4.9.3",
        "@vscode/test-electron": "^2.2.0"
    },
    "extensionKind": [
        "workspace"
    ],
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "lint": "eslint src --ext ts"
    }
}
